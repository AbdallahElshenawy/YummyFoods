@page "/Category"
@inject ICategoryRepository categoryRepository
@inject IJSRuntime jsRuntime
<BSModal OnModalConfirmation="ConfirmDeleteCategory"
    ButtonBootStrapStyle="btn-danger"
    ButtonText="Delete"
    ModalTitle="Are you sure you want to delete this category?"></BSModal>
@if (isLoading)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="images/loading.gif" alt="Loading..."/>
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class ="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="Category/Create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square"></i> Add New Category</a>
                </div>
            </div>
            @if(categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in categories)
                        {
                            <tr>
                                <td>@category.Name</td>
                                <td>
                                    <a href="@($"Category/Update/{category.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <button class="btn btn-danger" @onclick="()=>HandelDelete(category.Id)">
                                        <i class="bi bi-trash3"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div> 
}
@code {
    private bool isLoading { get; set; } = true;
    private IEnumerable<Category> categories { get; set; } = new List<Category>();
    private int categoryId { get; set; } = 0;   
   
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await LoadCategories();
            isLoading = false;
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }
    private async Task LoadCategories()
    {
        categories = await categoryRepository.GetAllAsync();
    }
    private void HandelDelete(int id) 
    {
        categoryId = id;
        jsRuntime.InvokeVoidAsync("ShowConfirmationModal");
    }
    private async Task ConfirmDeleteCategory(bool isConfirmed)
    {
        isLoading = true;
        await jsRuntime.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && categoryId != 0)
        {
            var result = await categoryRepository.DeleteAsync(categoryId);
            if(result)
                jsRuntime?.ToasterSuccess("Category deleted successfully");
            else
                jsRuntime?.ToasterError("Some Error Happened");

            await LoadCategories();

        }
        categoryId = 0;
        isLoading = false;
       
    }
}
